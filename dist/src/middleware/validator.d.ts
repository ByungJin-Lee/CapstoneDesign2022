import { NextFunction, Request, Response } from 'express';
declare function ValidateErrorHandler(req: Request, res: Response, next: NextFunction): Response<any, Record<string, any>> | undefined;
declare const _default: {
    user_signup: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    user_login: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    user_get: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    user_point_give: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    user_change_name: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    user_change_password: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    user_history: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    notice_get: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    notice_post: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    notice_update: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    notice_delete: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    ticket_create: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    ticket_get: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    ticket_assign: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    ticket_validate: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    ticket_refund: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
    ticket_change_state: (import("express-validator").ValidationChain | typeof ValidateErrorHandler)[];
};
export default _default;
